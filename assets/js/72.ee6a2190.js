(window.webpackJsonp=window.webpackJsonp||[]).push([[72],{646:function(e,t,v){"use strict";v.r(t);var _=v(10),i=Object(_.a)({},(function(){var e=this,t=e.$createElement,v=e._self._c||t;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("h1",{attrs:{id:"vite为什么更快"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#vite为什么更快"}},[e._v("#")]),e._v(" Vite为什么更快")]),e._v(" "),v("p",[e._v("Vite 运行 Dev 命令后只做了两件事情，一是启动了一个用于承载资源服务的 service；二是使用 "),v("a",{attrs:{href:"https://mp.weixin.qq.com/s?__biz=Mzg3OTYwMjcxMA==&mid=2247484332&idx=1&sn=90475ae1c238a09ad4cd07cb8d394d98&scene=21#wechat_redirect",target:"_blank",rel:"noopener noreferrer"}},[e._v("esbuild"),v("OutboundLink")],1),e._v(" 预构建 npm 依赖包。之后就一直躺着，直到浏览器以 http 方式发来 ESM 规范的模块请求时，Vite 才开始“"),v("strong",[e._v("「按需编译」")]),e._v("”被请求的模块。")]),e._v(" "),v("p",[e._v("webpack是自己对源文件进行编译，让浏览器只要执行ES5代码就行了，但Vite将编译工作交给了浏览器自行处理（前提是浏览器支持ESM规范）")]),e._v(" "),v("p",[e._v("除了启动阶段跳过编译操作之外，Vite 还有很多值得一提的性能优化，整体梳理一下：")]),e._v(" "),v("ul",[v("li",[e._v("预编译：npm 包这类基本不会变化的模块，使用 Esbuild 在 "),v("strong",[e._v("「预构建」")]),e._v(" 阶段先打包整理好，减少 http 请求数")]),e._v(" "),v("li",[e._v("按需编译：用户代码这一类频繁变动的模块，直到被使用时才会执行编译操作")]),e._v(" "),v("li",[e._v("客户端强缓存：请求过的模块会被以 http 头 "),v("code",[e._v("max-age=31536000,immutable")]),e._v(" 设置为强缓存，如果模块发生变化则用附加的版本 query 使其失效")]),e._v(" "),v("li",[e._v("产物优化：相比于 Webpack ，Vite 直接锚定高版本浏览器，不需要在 build 产物中插入过多运行时与模板代码")]),e._v(" "),v("li",[e._v("内置更好的分包实现：不需要用户干预，默认启用一系列智能分包规则，尽可能减少模块的重复打包")]),e._v(" "),v("li",[e._v("更好的静态资源处理：Vite 尽量避免直接处理静态资源，而是选择遵循 ESM 方式提供服务，例如引入图片 "),v("code",[e._v("import img from 'xxx.png'")]),e._v(" 语句，执行后 "),v("code",[e._v("img")]),e._v(" 变量只是一个路径字符串。")])]),e._v(" "),v("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://cdn.jsdelivr.net/gh/FrancisSaber/image/markdown-Image202203111228252.png",alt:"图片"}}),e._v(" "),v("h1",{attrs:{id:"esbuild"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#esbuild"}},[e._v("#")]),e._v(" Esbuild")]),e._v(" "),v("p",[e._v("大多数前端打包工具都是基于 JavaScript 实现的，而 Esbuild 则选择使用 Go 语言编写，Go在语言层面上更加具有优势；前者是解释性，后者是编译型且Go还是多线程的，能饱和使用CPU，线程之间内存共享")]),e._v(" "),v("p",[e._v("Esbuild 并不是另一个 Webpack，它仅仅提供了构建一个现代 Web 应用所需的最小功能集合，未来也不会大规模加入我们业已熟悉的各类构建特性。最新版本 Esbuild 的主要功能特性有：")]),e._v(" "),v("ul",[v("li",[e._v("支持 js、ts、jsx、css、json、文本、图片等资源")]),e._v(" "),v("li",[e._v("增量更新")]),e._v(" "),v("li",[e._v("Sourcemap")]),e._v(" "),v("li",[e._v("开发服务器支持")]),e._v(" "),v("li",[e._v("代码压缩")]),e._v(" "),v("li",[e._v("Code split")]),e._v(" "),v("li",[e._v("Tree shaking")]),e._v(" "),v("li",[e._v("插件支持")])]),e._v(" "),v("p",[e._v("在 Webpack、Rollup 这类工具中，我们不得不使用很多额外的第三方插件来解决各种工程需求，比如：")]),e._v(" "),v("ul",[v("li",[e._v("使用 babel 实现 ES 版本转译")]),e._v(" "),v("li",[e._v("使用 eslint 实现代码检查")]),e._v(" "),v("li",[e._v("使用 TSC 实现 ts 代码转译与代码检查")]),e._v(" "),v("li",[e._v("使用 less、stylus、sass 等 css 预处理工具")])]),e._v(" "),v("p",[e._v("在ESbuild自身就已经实现了这些功能，无需让Vite添加第三方插件解析；")])])}),[],!1,null,null,null);t.default=i.exports}}]);